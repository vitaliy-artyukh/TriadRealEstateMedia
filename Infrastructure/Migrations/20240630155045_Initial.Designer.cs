// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(TriadRealEstateMediaContext))]
    [Migration("20240630155045_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.AggregatesModel.ContactAddressAggregate.Models.Db.DbContactAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContactId")
                        .IsUnique();

                    b.ToTable("ContactAddresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            CreatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2974),
                            Latitude = 51.4966656,
                            Longitude = -0.1258339,
                            Name = "The Big Ban",
                            UpdatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2975)
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 2,
                            CreatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2977),
                            Latitude = -73.988239300000004,
                            Longitude = 40.748444499999998,
                            Name = "Empire State Building",
                            UpdatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2977)
                        });
                });

            modelBuilder.Entity("Domain.AggregatesModel.ContactAggregate.Models.Db.DbContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2371),
                            Description = "Friend from college",
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "555-1234",
                            UpdatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2374)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2378),
                            Description = "Co-worker at TechCorp",
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "555-5678",
                            UpdatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2379)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2380),
                            Description = "Neighbor",
                            Email = "michael.johnson@example.com",
                            FirstName = "Michael",
                            LastName = "Johnson",
                            PhoneNumber = "555-8765",
                            UpdatedAt = new DateTime(2024, 6, 30, 15, 50, 45, 105, DateTimeKind.Utc).AddTicks(2381)
                        });
                });

            modelBuilder.Entity("Domain.AggregatesModel.ContactAddressAggregate.Models.Db.DbContactAddress", b =>
                {
                    b.HasOne("Domain.AggregatesModel.ContactAggregate.Models.Db.DbContact", "Contact")
                        .WithOne("Address")
                        .HasForeignKey("Domain.AggregatesModel.ContactAddressAggregate.Models.Db.DbContactAddress", "ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Domain.AggregatesModel.ContactAggregate.Models.Db.DbContact", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
